"use strict";var l=Object.create;var p=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var w=Object.getOwnPropertyNames;var y=Object.getPrototypeOf,v=Object.prototype.hasOwnProperty;var E=(o,e)=>{for(var t in e)p(o,t,{get:e[t],enumerable:!0})},f=(o,e,t,i)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of w(e))!v.call(o,n)&&n!==t&&p(o,n,{get:()=>e[n],enumerable:!(i=m(e,n))||i.enumerable});return o};var d=(o,e,t)=>(t=o!=null?l(y(o)):{},f(e||!o||!o.__esModule?p(t,"default",{value:o,enumerable:!0}):t,o)),$=o=>f(p({},"__esModule",{value:!0}),o);var S={};E(S,{activate:()=>x,deactivate:()=>_});module.exports=$(S);var r=d(require("vscode")),s=d(require("fs")),h=d(require("path"));function x(o){let e=r.commands.registerCommand("createLanggraphStructure",async()=>{let t=await r.window.showInputBox({prompt:"Enter the name of the graph/agent",placeHolder:"AgentName"});if(!t){r.window.showErrorMessage("Agent name is required!");return}let i=r.workspace.rootPath;if(!i){r.window.showErrorMessage("No folder or workspace opened");return}let n=h.join(i,t),u=["utils"],g=[{path:"__init__.py",content:`# Initialization for ${t}`},{path:"utils/__init__.py",content:`# Initialization for utilities in ${t}`},{path:"utils/tools.py",content:`# Tools for your graph in ${t}`},{path:"utils/nodes.py",content:`# Node functions for your graph in ${t}`},{path:"utils/state.py",content:`# State definition of your graph in ${t}`},{path:"requirements.txt",content:`# Package dependencies for ${t}`},{path:"agent.py",content:`# Code for constructing your graph in ${t}`}];try{s.existsSync(n)||s.mkdirSync(n),u.forEach(a=>{let c=h.join(n,a);s.existsSync(c)||s.mkdirSync(c)}),g.forEach(a=>{let c=h.join(n,a.path);s.writeFileSync(c,a.content)}),r.window.showInformationMessage(`Langgraph structure created for ${t}`)}catch(a){r.window.showErrorMessage(`Error creating langgraph structure: ${a.message}`)}});o.subscriptions.push(e)}function _(){}0&&(module.exports={activate,deactivate});
